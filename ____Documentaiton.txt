

Liblsl Location
–––––––––––––––––––––––––
/usr/lib
sudo apt remove liblsl


MuseLSL
–––––––––––––––––––––––––

https://github.com/sccn/liblsl


––––––––––––––––––––––––––––––––––––––––––––––––––––



By synchronization I mean that when we record from two or more devices (in the future) and want to calculate, say, correlation between two signals from the different streams, the signals have to be synchronized (i.e. ‘placed under’ one another so that the timing is matched).

From https://labstreaminglayer.readthedocs.io/info/time_synchronization.html I understand that form LSL we can obtain two time stamps and based on these timestamps the recordings can be synchronized. They also mention LabRecorder as the application to record the data.

So I think that the next things to try could be:

- if having LabRecorder running on the computer, can you record the data over the dedicated network from the MUSE/RPi

- do you see the two kinds of time stamps in the recording?

- what do these time stamps actually mean and how to synchronize using these time stamps.






––––––––––––––––––––––––––
30 March 2024
––––––––––––––––––––––––––

 LabRecorder handles storage of the synchronization information in the XDF file for you. The official XDF importers (pyxdf or xdf-Matlab), whether used directly or integrated into a tool like MNE or EEGLAB, use the synchronization information in the XDF file and perform stream synchronization upon file import. Please use these tools for your data storage and import if possible.


 Found device MuseS-6F7A, MAC Address 00:55:DA:BB:6F:7A

curl -L https://github.com/sccn/liblsl/releases/download/v1.16.0/liblsl-1.16.0-jammy_amd64.deb -o liblsl.deb
muselsl stream --address 00:55:DA:BB:6F:7A
muselsl stream --name MuseS-6F7A
muselsl view --address 00:55:DA:BB:6F:7A


sudo atom /etc/apt/sources.list
Clock Offset
––––––––––––––––––––––––––
say for example the base clock speed of a gpu is 1500mhz. an offset of +100mhz means that the base clock speed was increased by +100mhz to 1600mhz.


Qt Creator
––––––––––––––––––––––
https://plus.tuni.fi/comp.cs.110/spring-2024/rounds_r01/r01_03_qtcreator/

https://www.qt.io/download-qt-installer

https://packages.ubuntu.com/jammy/amd64/qt6-base-dev/download



sudo apt-get -f install


LabRecorder
–––––––––––––––––––––––––
https://github.com/labstreaminglayer/App-LabRecorder


/usr/LabRecorder
/usr/local/bin/LabRecorder
/usr/bin/LabRecorder ***
/usr/bin/LabRecorderCLI

https://github.com/xdf-modules/pyxdf


Read xdf file format in python




https://github.com/labstreaminglayer/App-LabRecorder
https://labstreaminglayer.readthedocs.io/dev/build_env.html
sudo apt-get install qt6-base-dev freeglut3-dev
sudo apt install build-essential g++ cmake




sudo apt install python3-pip -y
sudo pip install pylsl
sudo pip install muselsl

muselsl view
–––––––––––––––––––––––––
sudo apt install python3-tk -y
sudo apt install python3-pil python3-pil.imagetk -y


https://github.com/alexandrebarachant/muse-lsl/issues/1

liblsl
–––––––––––––––––––––––––
https://github.com/sccn/liblsl

https://labstreaminglayer.readthedocs.io/dev/lib_dev.html

/home/ahmad/.local/lib/python3.10/site-packages/pylsl
/usr/local/lib/python3.10/dist-packages/pylsl

Create Lib folder and paste liblsl folder there


labstreaminglayer


MNE
–––––––––––––––––––––––––
https://mne.tools/dev/install/manual_install.html#manual-install

https://mne.tools/dev/auto_examples/io/read_xdf.html

conda create --override-channels --channel=conda-forge --name=mne mne-base
pip install mne



–––––––––––––––––––––––––––––––––––––––––––
